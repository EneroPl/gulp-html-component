const fs=require("fs"),gutil=require("gulp-util");module.exports=({file:e,encoding:t,path:r})=>({components(){try{let e=r+"/components";return fs.readdirSync(e,{withFileTypes:!0}).filter(({name:e})=>e[0]===e[0].toUpperCase()).map(({name:r})=>{let[n,s]=r.split(".");return{name:n,format:s,filename:r,component:fs.readFileSync(`${e}/${r}`,t)}}).filter(({format:e})=>["html","htm"].includes(e))}catch(n){throw new gutil.PluginError("gulp-html-component",`Path "${r}/components" not found.`)}},parseListeners:e=>e.match(/p-on:[a-zA-Z]+="(.*?)"/gm).reduce((e,t)=>{let r=t.match(/:([a-zA-Z]+)=/)[1],n=t.match(/"(.*?)"/)[1];return e[r]=n,e},{}),useListeners:(e,r)=>(e=e.toString(),Object.entries(r).forEach(([t,n])=>{e.replace(RegExp(`p-bind:${t}`,"gm"),e=>(r[t]=null,`on${t}="${n}"`))}),e.includes("p-bind:listeners")&&(e=e.replace("p-bind:listeners",()=>Object.entries(r).filter(([e,t])=>!!t).reduce((e,[t,r])=>(e.push(`on${t}="${r}"`),e),[]).join(" "))),new Buffer.from(e,t)),parseProps(e){try{let t=e.match(/p-[a-zA-Z]+=('.*?'|".*?")/gm)?.reduce((e,t)=>{let[r,n]=t.split("=");return r=r.split("-")[1],n=JSON.parse(n),e[r]=n,e},{})||{};return t}catch(r){throw new gutil.PluginError("gulp-html-plugin",r)}},useProps:(e,r)=>!!e&&(e=e.toString(),Object.entries(r).forEach(([t,r])=>{e=e.replace(RegExp(`{{\\s*?${t}\\s*?}}`,"gm"),r)}),new Buffer.from(e,t))});