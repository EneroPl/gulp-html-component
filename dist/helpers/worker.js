const fs=require("fs"),gutil=require("gulp-util"),parseAttributes=(t,e)=>t.match(RegExp(`p-${e}:[a-zA-Z]+="(.*?)"`,"gm"))?.reduce((t,e)=>{try{let[r,n]=[e.match(/:([a-zA-Z]+)=/)[1],e.match(/"(.*?)"/)[1],];return t[r]=n,t}catch(l){return t}},{})||{};module.exports=({encoding:t,path:e})=>({components(){try{let r=e+"/components";return fs.readdirSync(r,{withFileTypes:!0}).filter(({name:t})=>t[0]===t[0].toUpperCase()).map(({name:e})=>{let[n,l]=e.split(".");return{name:n,format:l,filename:e,component:fs.readFileSync(`${r}/${e}`,t)}}).filter(({format:t})=>["html","htm"].includes(t))}catch(n){throw new gutil.PluginError("gulp-html-component",`Path "${e}/components" not found.`)}},getAttributes(t,e){try{return parseAttributes(t,e)}catch(r){throw new gutil.PluginError("gulp-html-component",r)}},useListeners:(e,r)=>(e=e.toString(),Object.entries(r).forEach(([t,n])=>{e=e.replace(RegExp(`p-on:${t}`,"gm"),()=>(r[t]=null,`on${t}="${n}"`))}),e.includes("p-on:listeners")&&(e=e.replace("p-on:listeners",()=>Object.entries(r).filter(([t,e])=>!!e).reduce((t,[e,r])=>(t.push(`on${e}="${r}"`),t),[]).join(" "))),new Buffer.from(e,t)),useProps(e,r,n){if(!r)return!1;r=r.toString(),Object.entries(n).forEach(([t,e])=>{let n=r.match(RegExp(`{{\\s*?${t}\\s*?}}`,"gm")),l=r.match(RegExp(`p-bind:${t}`,"gm"));return n?.length&&(r=r.replace(n[0],e)),l?.length&&(r=r.replace(l[0],`${t}="${e}"`)),r});let l=e.match(/class="(.*?)"/gm);if(l?.length){let s=l[0].match(/"(.*?)"/)[1];r=r.replace(/class="(.*?)"/,t=>{let e=t.match(/"(.*?)"/)[1];return`class="${[e,s].join(" ")}"`})}return new Buffer.from(r,t)}});